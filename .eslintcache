[{"C:\\Users\\Jesus\\Desktop\\sistema\\materialuitabla\\src\\index.js":"1","C:\\Users\\Jesus\\Desktop\\sistema\\materialuitabla\\src\\App.js":"2","C:\\Users\\Jesus\\Desktop\\sistema\\materialuitabla\\src\\reportWebVitals.js":"3"},{"size":500,"mtime":499162500000,"results":"4","hashOfConfig":"5"},{"size":7229,"mtime":1611587786650,"results":"6","hashOfConfig":"5"},{"size":362,"mtime":499162500000,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},"1l864b3",{"filePath":"11","messages":"12","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"13","usedDeprecatedRules":"10"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"C:\\Users\\Jesus\\Desktop\\sistema\\materialuitabla\\src\\index.js",[],["17","18"],"C:\\Users\\Jesus\\Desktop\\sistema\\materialuitabla\\src\\App.js",["19","20"],"import React, { useEffect, useState } from 'react';\nimport './App.css';\nimport { makeStyles, StylesProvider } from '@material-ui/core';\nimport axios from 'axios';\nimport { Table, TableContainer, TableHead, TableCell, TableBody, TableRow, Modal, Button, TextField } from '@material-ui/core';\nimport { Edit, Delete } from '@material-ui/icons';\n\nconst baseUrl = 'http://localhost:3000/usuarios/'\n\nconst useStyles = makeStyles((theme) => ({\n  modal: {\n    position: 'absolute',\n    width: 400,\n    backgroundColor: theme.palette.background.paper,\n    border: '2px solid #000',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n    top: 100,\n    left: '50%',\n    transform: 'translate(-50%, 50%)'\n  },\n  iconos: {\n    cursor: 'pointer'\n  },\n  inputMaterial: {\n    width: '100%'\n  }\n}));\n\n\nfunction App() {\n  const classes = useStyles();\n\n  const [datos, setDatos] = useState([]);\n  const [modalInsertar, setModalInsertar] = useState(false);\n  const [modalEdit, setModalEdit] = useState(false);\n  const [modalEliminar, setModalEliminar] = useState(false);\n  const [usuarioSelecionado, setUsuarioSelecionado] = useState({\n    nombre: \"\",\n    apellidos: \"\",\n    cargo: \"\"\n  });\n\n  //conectarse y cargar el API\n  const peticionGet = async () => {\n    await axios.get(baseUrl)\n      .then(response => {\n        console.log(response.data);\n        setDatos(response.data)\n      })\n  }\n\n  useEffect(() => {\n    peticionGet();\n  }, [])\n\n  //Guardar en el API\n  const peticionPost = async () => {\n    await axios.post(baseUrl, usuarioSelecionado)\n      .then(response => {\n        setDatos(datos.concat(response.data))\n        abrirCerrarModalInsertar()\n      })\n  }\n\n  //Editar en el API\n  const peticionesPUT = async () => {\n    await axios.put(baseUrl + usuarioSelecionado.id, usuarioSelecionado)\n      .then(response => {\n        let dataNueva = datos\n        console.log(dataNueva)\n        dataNueva.map(users => {\n          if (usuarioSelecionado.id === users.id) {\n            users.nombre = usuarioSelecionado.nombre;\n            users.apellidos = usuarioSelecionado.apellidos;\n            users.cargo = usuarioSelecionado.cargo;\n          }\n          //return dataNueva\n        })\n        setDatos(dataNueva);\n        abrirCerrarModalEdit()\n      })\n  }\n\n  //Borrar Usuario\n  const peticionesDelete = async () => {\n    await axios.delete(baseUrl + usuarioSelecionado.id)\n      .then(response => {\n        setDatos(datos.filter(usuario => usuario.id !== usuarioSelecionado.id))\n        abrirCerrarModalEliminar();\n      })\n  }\n\n  const abrirCerrarModalInsertar = () => {\n    setModalInsertar(!modalInsertar);\n  }\n\n  const abrirCerrarModalEdit = () => {\n    setModalEdit(!modalEdit);\n  }\n\n  const abrirCerrarModalEliminar = () => {\n    setModalEliminar(!modalEliminar);\n  }\n\n  const seleccionarUsuario = (user, caso) => {\n    setUsuarioSelecionado(user);\n    (caso === 'Editar') ? abrirCerrarModalEdit() : abrirCerrarModalEliminar();\n  }\n\n  const handleChange = (e) => {\n    const { value, name } = e.target;\n    setUsuarioSelecionado(\n      prevUsuario => ({\n        ...prevUsuario,\n        [name]: value\n      }))\n  }\n  console.log(usuarioSelecionado)\n\n  const bodyInsertar = (\n    <div className={classes.modal}>\n      <h3>Agregar nuevo Usuario</h3>\n      <TextField\n        className={classes.inputMaterial}\n        label=\"Nombre\"\n        onChange={handleChange}\n        value={usuarioSelecionado.nombre}\n        name=\"nombre\"\n      />\n      <TextField\n        className={classes.inputMaterial}\n        label=\"Apellidos\"\n        onChange={handleChange}\n        value={usuarioSelecionado.apellidos}\n        name=\"apellidos\"\n      />\n      <TextField\n        className={classes.inputMaterial}\n        label=\"Cargo\"\n        onChange={handleChange}\n        value={usuarioSelecionado.cargo}\n        name=\"cargo\"\n      />\n      <div align=\"right\">\n        <Button color=\"primary\"\n          onClick={() => peticionPost()}>\n          Insertar\n          </Button>\n        <Button color=\"default\"\n          onClick={() => abrirCerrarModalInsertar()}>\n          Cancelar\n          </Button>\n      </div>\n    </div>\n  )\n\n  const bodyEdit = (\n    <div className={classes.modal}>\n      <h3>Editar Usuarios</h3>\n      <TextField\n        className={classes.inputMaterial}\n        label=\"Nombre\"\n        onChange={handleChange}\n        value={usuarioSelecionado && usuarioSelecionado.nombre}\n        name=\"nombre\"\n      />\n      <TextField\n        className={classes.inputMaterial}\n        label=\"Apellidos\"\n        onChange={handleChange}\n        value={usuarioSelecionado && usuarioSelecionado.apellidos}\n        name=\"apellidos\"\n      />\n      <TextField\n        className={classes.inputMaterial}\n        label=\"Cargo\"\n        onChange={handleChange}\n        value={usuarioSelecionado && usuarioSelecionado.cargo}\n        name=\"cargo\"\n      />\n      <div align=\"right\">\n        <Button color=\"primary\"\n          onClick={() => peticionesPUT()}>\n          Editar\n          </Button>\n        <Button color=\"default\"\n          onClick={() => abrirCerrarModalEdit()}>\n          Cancelar\n          </Button>\n      </div>\n    </div>\n  )\n\n  const bodyEliminar = (\n    <div className={classes.modal}>\n      <p>Estas seguro de eliminar este usuario? <b>{usuarioSelecionado && usuarioSelecionado.nombre}</b>?</p>\n      <div align=\"right\">\n        <Button color=\"primary\" onClick={() => peticionesDelete()}>\n          Si\n          </Button>\n        <Button color=\"default\"\n          onClick={() => abrirCerrarModalEliminar()}>\n          No\n          </Button>\n      </div>\n    </div>\n  )\n\n  return (\n    <div className=\"App\">\n      <br />\n      <Button variant=\"contained\" color=\"primary\" onClick={() => abrirCerrarModalInsertar()}>\n        Insertar\n      </Button>\n      <br />\n      <TableContainer>\n        <Table>\n          <TableHead>\n            <TableRow>\n              <TableCell>Nombre</TableCell>\n              <TableCell>Apellidos</TableCell>\n              <TableCell>Cargo</TableCell>\n              <TableCell>Acciones</TableCell>\n            </TableRow>\n          </TableHead>\n\n          <TableBody>\n            {\n              datos.map((user) => (\n                <TableRow key={user.id}>\n                  <TableCell>{user.nombre}</TableCell>\n                  <TableCell>{user.apellidos}</TableCell>\n                  <TableCell>{user.cargo}</TableCell>\n                  <TableCell>\n                    <Edit className={classes.iconos} onClick={() => seleccionarUsuario(user, 'Editar')} />\n                    &nbsp; &nbsp; &nbsp;\n                    <Delete className={classes.iconos} onClick={() => seleccionarUsuario(user, 'Eliminar')} />\n                  </TableCell>\n                </TableRow>\n              ))\n            }\n          </TableBody>\n        </Table>\n      </TableContainer>\n\n      <Modal\n        open={modalInsertar}\n        onClose={abrirCerrarModalInsertar}\n      >\n        {bodyInsertar}\n      </Modal>\n\n      <Modal\n        open={modalEdit}\n        onClose={abrirCerrarModalEdit}\n      >\n        {bodyEdit}\n      </Modal>\n\n      <Modal\n        open={modalEliminar}\n        onClose={abrirCerrarModalEliminar}\n      >\n        {bodyEliminar}\n      </Modal>\n    </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\Jesus\\Desktop\\sistema\\materialuitabla\\src\\reportWebVitals.js",[],["21","22"],{"ruleId":"23","replacedBy":"24"},{"ruleId":"25","replacedBy":"26"},{"ruleId":"27","severity":1,"message":"28","line":3,"column":22,"nodeType":"29","messageId":"30","endLine":3,"endColumn":36},{"ruleId":"31","severity":1,"message":"32","line":72,"column":29,"nodeType":"33","messageId":"34","endLine":72,"endColumn":31},{"ruleId":"23","replacedBy":"35"},{"ruleId":"25","replacedBy":"36"},"no-native-reassign",["37"],"no-negated-in-lhs",["38"],"no-unused-vars","'StylesProvider' is defined but never used.","Identifier","unusedVar","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside",["37"],["38"],"no-global-assign","no-unsafe-negation"]